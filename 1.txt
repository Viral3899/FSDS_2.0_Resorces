import pandas as pd
import numpy as np
import tempfile
import dash
import dash_core_components as dcc
import dash_html_components as html
from dash.dependencies import Input, Output, State

app = dash.Dash(__name__)

# Define the layout of the app
app.layout = html.Div([
    html.H1('Pivot Table Example'),
    html.Button('Generate Pivot Table', id='pivot-button', n_clicks=0),
    html.A('Download CSV', id='download-link', download='', href='', target='_blank')
])

# Define the callback for the pivot button
@app.callback(
    Output('download-link', 'href'),
    Input('pivot-button', 'n_clicks')
)
def generate_pivot_table(n_clicks):
    data = {
        'date': pd.date_range('2022-01-01', '2022-01-31'),
        'category': np.random.choice(['A', 'B', 'C'], size=31),
        'value': np.random.randint(1, 100, size=31)
    }
    df = pd.DataFrame(data)
    pivot = pd.pivot_table(df, values='value', index='date', columns='category')

    # Save the pivot table to a temporary file
    with tempfile.NamedTemporaryFile(mode='w', delete=False) as f:
        pivot.to_csv(f.name, index=False)
        filename = f.name

    # Update the download link with the temporary file URL
    href = '/download/{}'.format(filename)
    return href

# Define a route for downloading files
@app.server.route('/download/<path:path>')
def serve_file(path):
    root_dir = tempfile.gettempdir()
    return flask.send_from_directory(directory=root_dir, filename=path, as_attachment=True)

if __name__ == '__main__':
    app.run_server(debug=True)
